@using ShippingHelper.Common.Constants;
@model ShippingHelper.Core.Models.Offers

@{
    ViewData["Title"] = "Offer Details";
}

<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EndAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EndAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Note)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Note)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PostedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PostedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class="col-sm-2">
            Posted by
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Users.Id)
        </dd>
        @if (User.IsInRole(Roles.User) && Model.Status != ShippingHelper.Core.Models.OfferStatus.Open)
        {
            <dt class="col-sm-2">
                Shipping Accepted By
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Users.Id)
            </dd>
        }
    </dl>
</div>
<div>
    @*    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>*@
    @if (User.IsInRole(Roles.Shipper))
    {
        switch (Model.Status)
        {
            case ShippingHelper.Core.Models.OfferStatus.Open:
                <a asp-action="AcceptOffer" asp-route-id="@Model?.Id" class="btn btn-success">Accept Offer</a>
                break;
            case ShippingHelper.Core.Models.OfferStatus.Accepted:
                <a asp-action="ChangeOfferStatus" asp-route-id="@Model?.Id" class="btn btn-info" asp-route-status="@ShippingHelper.Core.Models.OfferStatus.Delivering">Ready to Deliver</a>
                break;
            case ShippingHelper.Core.Models.OfferStatus.Delivering:
                <a asp-action="ChangeOfferStatus" asp-route-id="@Model?.Id" class="btn btn-success" asp-route-status="@ShippingHelper.Core.Models.OfferStatus.Finished">I Finished the Offer!</a>
                break;
        }
    }
    else
    {
        if (Model.Status == ShippingHelper.Core.Models.OfferStatus.Open)
        {
            <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-dark">Edit</a>
            <a asp-action="Delete" asp-route-id="@Model?.Id" class="btn btn-danger">Delete</a>
        }
        else
        {
            <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-dark">Report Merchant</a>
        }
    }
</div>

